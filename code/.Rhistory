}
e()
environment(lm)
myLm=lm
environment(myLm)
g <- function(x) {
if (!exists("a", inherits = FALSE)) {
message("Defining a")
a <- 1
} else {
a <- a + 1
}
a
}
g(10)
g(10)
jj=2
h <- function(x) {
a <- jj
x + a
}
h(1)
jj=3
h(1)
?parent.frame
?traceback
-1:2
10:1
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
traceback
traceback()
f(10)
f(10)
traceback()
f(10)
ls()
d
?options
?debugger
library(xtable)
vignette(package="xtable")
vignette("xtableGallery")
library("lme4")
vignette(package="lme4")
vignette(package="lme4")
vignette("lmer")
?mle
library(stats4)
?mle
?score
?mle
library(help="stats4")
mle
dnorm
dnorm(1)
plot(dnorm)
plot(dnorm,xlim=c(-10,10))
plot(dnorm,xlim=c(0,10))
a=function(n){
function(p){
for(k in 1:n){
if((n*p>=(k-1))&(n*p<=k)){
return(2*choose(n-1,k-1)*p^k*(1-p)^(n-k+1))
}
}
}
}
myF=a(4)
x=seq(0,1,100)
y=apply(x,myF)
?apply
?mapply
?sapply
myF=a(4)
x=seq(0,1,100)
y=sapply(x,myF)
plot(x,y)
x
?seq
x=seq(0,1,length.out=100)
y=sapply(x,myF)
plot(x,y)
plot(x,y,type="l")
myF=a(5)
x=seq(0,1,length.out=100)
y=sapply(x,myF)
plot(x,y,type="l")
myF=a(100)
x=seq(0,1,length.out=100)
y=sapply(x,myF)
plot(x,y,type="l")
myF=a(50)
x=seq(0,1,length.out=100)
y=sapply(x,myF)
plot(x,y,type="l")
myF=a(25)
x=seq(0,1,length.out=100)
y=sapply(x,myF)
plot(x,y,type="l")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
setwd("~/regressionPaper/code")
source('~/regressionPaper/code/secondCode.R')
nbv
debugSource('~/regressionPaper/code/secondCode.R')
REL
debugSource('~/regressionPaper/code/secondCode.R')
T
debugSource('~/regressionPaper/code/secondCode.R')
temp
jun
debugSource('~/regressionPaper/code/secondCode.R')
temp
jun
debugSource('~/regressionPaper/code/secondCode.R')
jun
temp
source('~/regressionPaper/code/secondCode.R')
nbv
source('~/regressionPaper/code/secondCode.R')
nbv
source('~/regressionPaper/code/secondCode.R')
nbv
source('~/regressionPaper/code/secondCode.R')
nbv
source('~/regressionPaper/code/secondCode.R')
nbv
source('~/regressionPaper/code/secondCode.R')
nbv
source('~/regressionPaper/code/secondCode.R')
nbv
source('~/regressionPaper/code/secondCode.R')
nbv
source('~/regressionPaper/code/secondCode.R')
nbv
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
nbv
source('~/regressionPaper/code/secondCode.R')
nbv
nbv=myExp()
nbv
(nbv=myExp())
(nbv=myExp())
(nbv=myExp())
source('~/regressionPaper/code/secondCode.R')
nbv
source('~/regressionPaper/code/secondCode.R')
(nbv=myExp())
(nbv=myExp())
(nbv=myExp())
(nbv=myExp())
(nbv=myExp())
(nbv=myExp())
(nbv=myExp())
(nbv=myExp())
(nbv=myExp())
(nbv=myExp())
source('~/regressionPaper/code/secondCode.R')
(nbv=myExp())
myExp=function(
n=40,
p=310,
T=1,
betaMod=0.04,
varEpsilon=4,
rho=runif(T,0,1),
muX=runif(p,2,3),
alpha=1){
beta=c(rep(1,p/2),rep(0,p/2))
#beta=c(rep(1,5),rep(0,p-5))
beta=beta[sample.int(p)]
beta=beta/sqrt(sum(beta^2))
beta=sqrt(betaMod)*beta
theSigma=rep(0,p*p)
dim(theSigma)=c(p,p)
for(i in 1:p)for(j in 1:p){
if(abs(i-j)<T){
temp=0
for(k in 1:(T-abs(i-j))){
temp=temp+rho[k]*rho[k+abs(i-j)]
}
theSigma[i,j]=temp
}
}
generateData=function(beta){
X=rep(0,n*p)
dim(X)=c(n,p)
Z=rnorm(n*(p+T-1),0,1)
dim(Z)=c(n,p+T-1)
for(i in 1:n)for(j in 1:p){
X[i,j]=muX[j]+sum(rho*Z[i,j:(j+T-1)])
}
y=X%*%beta+rep(alpha,n)+rnorm(n,0,sqrt(varEpsilon))
list(X=X,y=y)
}
Q=diag(n)-rep(1,n)%*%t(rep(1,n))/n
W=eigen(Q)$vectors[,1:(n-1)]
ChenT=pnorm(qnorm(0.05)+n*sum((theSigma%*%beta)^2)/sqrt(2*sum(theSigma^2))/4)
simul=function(){
data=generateData(beta)
X=t(data$X)
y=data$y
myTCal=function(X,y){
temp=(
sum(y^2)-n*(mean(y))
)/
(
t(y)%*%W%*%solve(t(W)%*%t(X)%*%X%*%W)%*%t(W)%*%y
)
SigmaEst=var(t(X))
myE=eigen(SigmaEst)$values
jun=sum(myE)
fang=sum(myE^2)-jun^2/(n-1)
(temp-jun)/sqrt(fang)
}
T=as.numeric(myTCal(X,y))
T=0+(T>qnorm(0.95))
#thePhi=function(i1,i2,i3,i4){
#    1/4*t(X[,i1]-X[,i2])%*%(X[,i3]-X[,i4])*(y[i1]-y[i2])*(y[i3]-y[i4])
#}
#theTemp=0
#for(i1 in 1:n)for(i2 in 1:n)for(i3 in 1:n)for(i4 in 1:n){
#    if(i1!=i2&i1!=i3&i1!=i4&i2!=i3&i2!=i4&i3!=i4){
#        theTemp=theTemp+thePhi(i1,i2,i3,i4)
#    }
#}
#theTemp=theTemp*n*(n-1)*(n-2)*(n-3)/4/3/2/1
#ChenT=n*theTemp/sqrt(2*sum(theSigma^2))/4
list(T=T,ChenT=ChenT)
}
REL=NULL
ChenREL=NULL
for(i in 1:200){
temp=simul()
REL[i]=temp$T
ChenREL[i]=temp$ChenT
}
#xxx=NULL
#for(j in 1:length(REL)){
#xxx[j]=qchisq((j-0.5)/length(REL),df=1)
#}
#plot(xxx,sort(REL))
#abline(0,1)
#hist(pchisq(REL,df=1))
list(myPower=mean(REL),
chenPower=mean(ChenREL))
}
(nbv=myExp())
myExp=function(
n=40,
p=310,
T=1,
betaMod=0.04,
varEpsilon=4,
rho=runif(T,0,1),
muX=runif(p,2,3),
alpha=1){
beta=c(rep(1,p/2),rep(0,p/2))
#beta=c(rep(1,5),rep(0,p-5))
beta=beta[sample.int(p)]
beta=beta/sqrt(sum(beta^2))
beta=sqrt(betaMod)*beta
theSigma=rep(0,p*p)
dim(theSigma)=c(p,p)
for(i in 1:p)for(j in 1:p){
if(abs(i-j)<T){
temp=0
for(k in 1:(T-abs(i-j))){
temp=temp+rho[k]*rho[k+abs(i-j)]
}
theSigma[i,j]=temp
}
}
generateData=function(beta){
X=rep(0,n*p)
dim(X)=c(n,p)
Z=rnorm(n*(p+T-1),0,1)
dim(Z)=c(n,p+T-1)
for(i in 1:n)for(j in 1:p){
X[i,j]=muX[j]+sum(rho*Z[i,j:(j+T-1)])
}
y=X%*%beta+rep(alpha,n)+rnorm(n,0,sqrt(varEpsilon))
list(X=X,y=y)
}
Q=diag(n)-rep(1,n)%*%t(rep(1,n))/n
W=eigen(Q)$vectors[,1:(n-1)]
ChenT=pnorm(qnorm(0.05)+n*sum((theSigma%*%beta)^2)/sqrt(2*sum(theSigma^2))/4)
simul=function(){
data=generateData(beta)
X=t(data$X)
y=data$y
myTCal=function(X,y){
temp=(
sum(y^2)-n*(mean(y))
)/
(
t(y)%*%W%*%solve(t(W)%*%t(X)%*%X%*%W)%*%t(W)%*%y
)
SigmaEst=var(t(X))
myE=eigen(SigmaEst)$values
jun=sum(myE)
fang=sum(myE^2)-jun^2/(n-1)
(temp-jun)/sqrt(fang)
}
T=as.numeric(myTCal(X,y))
T=0+(T>qnorm(0.95))
#thePhi=function(i1,i2,i3,i4){
#    1/4*t(X[,i1]-X[,i2])%*%(X[,i3]-X[,i4])*(y[i1]-y[i2])*(y[i3]-y[i4])
#}
#theTemp=0
#for(i1 in 1:n)for(i2 in 1:n)for(i3 in 1:n)for(i4 in 1:n){
#    if(i1!=i2&i1!=i3&i1!=i4&i2!=i3&i2!=i4&i3!=i4){
#        theTemp=theTemp+thePhi(i1,i2,i3,i4)
#    }
#}
#theTemp=theTemp*n*(n-1)*(n-2)*(n-3)/4/3/2/1
#ChenT=n*theTemp/sqrt(2*sum(theSigma^2))/4
list(T=T,ChenT=ChenT)
}
REL=NULL
ChenREL=NULL
for(i in 1:200){
temp=simul()
REL[i]=temp$T
ChenREL[i]=temp$ChenT
}
#xxx=NULL
#for(j in 1:length(REL)){
#xxx[j]=qchisq((j-0.5)/length(REL),df=1)
#}
#plot(xxx,sort(REL))
#abline(0,1)
#hist(pchisq(REL,df=1))
list(myPower=mean(REL),
chenPower=mean(ChenREL))
}
jjj=NULL
for(myMod in c(0,0.04)){
jjj=c(jjj,list(list(n=40,p=310,myMod=myMod)))
}
for(myMod in c(0,0.04)){
jjj=c(jjj,list(list(n=80,p=550,myMod=myMod)))
}
outN=NULL
outP=NULL
outMod=NULL
outChen=NULL
outNew=NULL
for(pa in jjj){
outN=c(outN,pa$n)
outP=c(outP,pa$p)
outMod=c(outMod,pa$myMod)
tmp=myExp(n=pa$n,p=pa$p,betaMod=pa$myMod)
outChen=c(outChen,tmp$chenPower)
outNew=c(outNew,tmp$myPower)
}
resul=data.frame(outN,outP,outMod,outChen,outNew)
library(xtable)
myTable=xtable(resul)
digits(myTable)=c(0,0,0,2,2,2)
print(myTable,include.rownames = FALSE)
source('~/regressionPaper/code/secondCode.R')
myExp=function(
n=40,
p=310,
T=10,
betaMod=0.04,
varEpsilon=4,
rho=runif(T,0,1),
muX=runif(p,2,3),
alpha=1){
beta=c(rep(1,p/2),rep(0,p/2))
#beta=c(rep(1,5),rep(0,p-5))
beta=beta[sample.int(p)]
beta=beta/sqrt(sum(beta^2))
beta=sqrt(betaMod)*beta
theSigma=rep(0,p*p)
dim(theSigma)=c(p,p)
for(i in 1:p)for(j in 1:p){
if(abs(i-j)<T){
temp=0
for(k in 1:(T-abs(i-j))){
temp=temp+rho[k]*rho[k+abs(i-j)]
}
theSigma[i,j]=temp
}
}
generateData=function(beta){
X=rep(0,n*p)
dim(X)=c(n,p)
Z=rnorm(n*(p+T-1),0,1)
dim(Z)=c(n,p+T-1)
for(i in 1:n)for(j in 1:p){
X[i,j]=muX[j]+sum(rho*Z[i,j:(j+T-1)])
}
y=X%*%beta+rep(alpha,n)+rnorm(n,0,sqrt(varEpsilon))
list(X=X,y=y)
}
Q=diag(n)-rep(1,n)%*%t(rep(1,n))/n
W=eigen(Q)$vectors[,1:(n-1)]
ChenT=pnorm(qnorm(0.05)+n*sum((theSigma%*%beta)^2)/sqrt(2*sum(theSigma^2))/4)
simul=function(){
data=generateData(beta)
X=t(data$X)
y=data$y
myTCal=function(X,y){
temp=(
sum(y^2)-n*(mean(y))
)/
(
t(y)%*%W%*%solve(t(W)%*%t(X)%*%X%*%W)%*%t(W)%*%y
)
SigmaEst=var(t(X))
myE=eigen(SigmaEst)$values
jun=sum(myE)
fang=sum(myE^2)-jun^2/(n-1)
(temp-jun)/sqrt(fang)
}
T=as.numeric(myTCal(X,y))
T=0+(T>qnorm(0.95))
#thePhi=function(i1,i2,i3,i4){
#    1/4*t(X[,i1]-X[,i2])%*%(X[,i3]-X[,i4])*(y[i1]-y[i2])*(y[i3]-y[i4])
#}
#theTemp=0
#for(i1 in 1:n)for(i2 in 1:n)for(i3 in 1:n)for(i4 in 1:n){
#    if(i1!=i2&i1!=i3&i1!=i4&i2!=i3&i2!=i4&i3!=i4){
#        theTemp=theTemp+thePhi(i1,i2,i3,i4)
#    }
#}
#theTemp=theTemp*n*(n-1)*(n-2)*(n-3)/4/3/2/1
#ChenT=n*theTemp/sqrt(2*sum(theSigma^2))/4
list(T=T,ChenT=ChenT)
}
REL=NULL
ChenREL=NULL
for(i in 1:200){
temp=simul()
REL[i]=temp$T
ChenREL[i]=temp$ChenT
}
#xxx=NULL
#for(j in 1:length(REL)){
#xxx[j]=qchisq((j-0.5)/length(REL),df=1)
#}
#plot(xxx,sort(REL))
#abline(0,1)
#hist(pchisq(REL,df=1))
list(myPower=mean(REL),
chenPower=mean(ChenREL))
}
jjj=NULL
for(myMod in c(0,0.04)){
jjj=c(jjj,list(list(n=40,p=310,myMod=myMod)))
}
for(myMod in c(0,0.04)){
jjj=c(jjj,list(list(n=80,p=550,myMod=myMod)))
}
outN=NULL
outP=NULL
outMod=NULL
outChen=NULL
outNew=NULL
for(pa in jjj){
outN=c(outN,pa$n)
outP=c(outP,pa$p)
outMod=c(outMod,pa$myMod)
tmp=myExp(n=pa$n,p=pa$p,betaMod=pa$myMod)
outChen=c(outChen,tmp$chenPower)
outNew=c(outNew,tmp$myPower)
}
resul=data.frame(outN,outP,outMod,outChen,outNew)
library(xtable)
myTable=xtable(resul)
digits(myTable)=c(0,0,0,2,2,2)
print(myTable,include.rownames = FALSE)
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
source('~/regressionPaper/code/secondCode.R')
